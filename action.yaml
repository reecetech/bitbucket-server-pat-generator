---
name: 'Bitbucket Server PAT Generator'
description: Generates a Bitbucket Server Personal Access Token

branding:
  icon: unlock
  color: purple

inputs:
  base_url:
    description: 'Base URL of Bitbucket Server'
    required: true
  username:
    description: 'Username to connect to Bitbucket Server'
    required: true
  password:
    description: 'Password to connect to Bitbucket Server'
    required: true
  mode:
    description: 'Mode to run in - either `create` or `revoke`'
    required: false
    default: 'create'
  pat_id:
    description: 'The ID of the PAT to revoke (only used if `mode` is `revoke`)'
    required: false
  valid_days:
    description: 'Days the PAT will be valid'
    required: false
    default: '1'
  max_attempts:
    description: 'Number of times to attempt to generate a PAT'
    required: false
    default: '10'
  seconds_between_attempts:
    description: 'Number of seconds to wait before retrying to generate a PAT'
    required: false
    default: '30'
  check_using_ldap_bind:
    description: |
        Check the password validity using an LDAP bind to avoid Bitbucket
        requiring a CAPTCHA after failed authentication attempts
    required: false
    default: 'false'
  ldap_hosts:
    description: 'Comma separated list of LDAP hosts (only used if `check_using_ldap_bind` is `true`)'
    required: false
  ldap_path:
    description: |
      The path where the username will be found in the LDAP tree (only used if `check_using_ldap_bind` is `true`)

      For example, if the user object is `CN=username,OU=tech,OU=Accounts,DC=example,DC=org`, then set `ldap_path` to:
      `OU=tech,OU=Accounts,DC=example,DC=org`
  ldap_port:
    description: 'TCP port to connect to LDAP hosts (only used if `check_using_ldap_bind` is `true`)'
    required: false
    default: '389'
  pat_uri:
    description: 'The REST endpoint for PAT actions'
    required: false
    default: 'rest/access-tokens/1.0/users'
  project_permissions:
    description: 'Project permissions: read, write or admin'
    required: false
    default: 'write'
  repository_permissions:
    description: 'Repository permissions: read, write or admin'
    required: false
    default: 'write'
  run_in_docker:
    description: 'Run in a Docker image (if `actions/setup-python@v4` does not work for you)'
    required: false
    default: false

outputs:
  username:
    description: 'Username to connect to Bitbucket Server'
  username_encoded:
    description: 'Username URL encoded'
  pat:
    description: 'PAT to connect to Bitbucket Server'
  pat_encoded:
    description: 'PAT URL encoded'
  pat_id:
    description: 'ID of the PAT (can be used to revoke)'

runs:
  using: "composite"
  steps:
    - id: python
      name: Setup Python üêç
      if: ${{ inputs.run_in_docker == 'false' }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Should match Pipfile / "python_version"

    - id: deps
      name: Setup Python dependencies üì¶
      if: ${{ inputs.run_in_docker == 'false' }}
      shell: bash
      run: |
        set -euo pipefail
        pip install pipenv
        PIPENV_PIPFILE=${{ github.action_path }}/Pipfile pipenv install --ignore-pipfile

    - id: pat
      name: Run pat_helper.py üèÉ
      if: ${{ inputs.run_in_docker == 'false' }}
      env:
        base_url: ${{ inputs.base_url }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
        pat_id: ${{ inputs.pat_id }}
        valid_days: ${{ inputs.valid_days }}
        max_attempts: ${{ inputs.max_attempts }}
        seconds_between_attempts: ${{ inputs.seconds_between_attempts }}
        ldap_hosts: ${{ inputs.ldap_hosts }}
        ldap_path: ${{ inputs.ldap_path }}
        ldap_port: ${{ inputs.ldap_port }}
        pat_uri: ${{ inputs.pat_uri }}
      shell: bash
      run: |
        set -euo pipefail
        PIPENV_PIPFILE="${{ github.action_path }}/Pipfile" pipenv run \
          python "${{ github.action_path }}/pat_helper.py" \
            "${{ inputs.mode }}" \
            --check-using-ldap-bind "${{ inputs.check_using_ldap_bind }}" \
            --project-permissions "${{ inputs.project_permissions }}" \
            --repository-permissions "${{ inputs.repository_permissions }}"

    # In docker:
    - id: buildx
      name: Set up docker buildx üê≥
      if: ${{ inputs.run_in_docker == 'true' }}
      uses: docker/setup-buildx-action@v2

    - id: build
      name: Docker build üõ†
      if: ${{ inputs.run_in_docker == 'true' }}
      uses: docker/build-push-action@v3
      with:
        context: ${{ github.action_path }}
        file: ${{ github.action_path }}/Dockerfile
        push: false
        tags: pat-helper

    - id: pat-in-docker
      name: Run pat_helper.py in docker üéÅ
      if: ${{ inputs.run_in_docker == 'true' }}
      env:
        base_url: ${{ inputs.base_url }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
        pat_id: ${{ inputs.pat_id }}
        valid_days: ${{ inputs.valid_days }}
        max_attempts: ${{ inputs.max_attempts }}
        seconds_between_attempts: ${{ inputs.seconds_between_attempts }}
        ldap_hosts: ${{ inputs.ldap_hosts }}
        ldap_path: ${{ inputs.ldap_path }}
        ldap_port: ${{ inputs.ldap_port }}
        pat_uri: ${{ inputs.pat_uri }}
      shell: bash
      run: |
        set -euo pipefail
        docker run \
          --rm \
          --user "$(id -u):$(id -g)" \
          --entrypoint "/app/entrypoint_main.sh" \
          --env base_url \
          --env username \
          --env password \
          --env pat_id \
          --env valid_days \
          --env max_attempts \
          --env seconds_between_attempts \
          --env ldap_hosts \
          --env ldap_path \
          --env ldap_port \
          --env pat_uri \
          --env GITHUB_OUTPUT \
          --env GITHUB_STATE \
          --volume "${GITHUB_OUTPUT}:${GITHUB_OUTPUT}" \
          --volume "${GITHUB_STATE}:${GITHUB_STATE}" \
          pat-helper \
            "${{ inputs.mode }}" \
            --check-using-ldap-bind "${{ inputs.check_using_ldap_bind }}" \
            --project-permissions "${{ inputs.project_permissions }}" \
            --repository-permissions "${{ inputs.repository_permissions }}"
